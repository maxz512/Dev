name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Install dependencies for AWS CLI
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip

      # Step 4: Create a ZIP file for the Lambda function
      - name: Package Lambda Function
        run: zip updatePatientFunction.zip index.js

      # Step 5: Deploy the Lambda function
      - name: Deploy Lambda Function
        run: |
          aws lambda create-function \
              --function-name updatePatientFunction \
              --runtime nodejs22.x \
              --role ${{ secrets.LAMBDA_IAM_ROLE_ARN }} \
              --handler index.handler \
              --zip-file fileb://updatePatientFunction.zip \
          || aws lambda update-function-code \
              --function-name updatePatientFunction \
              --zip-file fileb://updatePatientFunction.zip

      # Step 6: Add permissions to the Lambda function
      - name: Add Permissions to Lambda
        run: |
          aws lambda add-permission \
              --function-name updatePatientFunction \
              --statement-id dynamodb-access \
              --action "dynamodb:UpdateItem" \
              --principal "lambda.amazonaws.com" \
          || echo "Permission already exists"

      # Step 7: Create or update API Gateway
      - name: Create API Gateway
        id: create-api
        run: |
          API_ID=$(aws apigatewayv2 create-api --name "PatientAPI" --protocol-type HTTP --target arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:updatePatientFunction --query 'ApiId' --output text) \
          || API_ID=$(aws apigatewayv2 get-apis --query "Items[?Name=='PatientAPI'].ApiId" --output text)
          echo "API_ID=${API_ID}" >> $GITHUB_ENV

      # Step 8: Deploy API Gateway
      - name: Deploy API Gateway
        run: |
          aws apigatewayv2 create-deployment --api-id ${{ env.API_ID }} --stage-name prod
